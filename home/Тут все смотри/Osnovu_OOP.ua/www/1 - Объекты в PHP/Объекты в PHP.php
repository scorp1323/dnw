<?php
//так всегда начинается php код(файл)
//=====================================================

header('Content-Type: text/html; charset=utf-8');
// теперь можно писать на русском без кракозяблов
//======================================================

ini_set('error_reporting', E_ALL);
ini_set('display_errors', 1);
ini_set('display_startup_errors', 1);
// так отображаются все ошибки
//=======================================================

//Объект — это такая штука, которая содержит внутри себя переменные (они называются поля, свойства или члены) и функции (которые называют методами). Каждый объект относится к определенному классу (виду). Класс определяет, какие именно поля и методы есть в объекте, например «все объекты класса X имеют поля field1, field2 и field3». Классы описывает программист, то есть ты.
//Порядок работы с объектами такой:
// - Определяем (объявляем, создаем) класс. При этом мы описываем какие поля и методы будут у объектов этого класса.
//  - Создаем один или несколько объектов этого класса
//   - Используем их для решения задачи
   
//Объекты используются обычно для того, чтобы хранить свойства каких-то сущностей (предметов), с которыми работает программа.

//Объекты можно хранить в переменной, помещать в массив, передавать в функцию, возвращать из функций - в общем, делать все то же самое, что и с другими типами значений вроде чисел или массивов.



// Создаем Класс Question (Вопрос)объекты которого будут хранить в себе все это (один объект соответствует одному вопросу, такой объект еще иногда называют моделью вопроса).
// 
//Итак, у нас есть сущность «Вопрос» и у нее есть такие свойства: «текст вопроса», «число баллов за правильный ответ», «варианты ответов», «правильный ответ». Опишем соответствующий класс:

// Создаем Класс Question
class Question {
	public $text; //текст вопроса
	public $points = 5; //число балов по умолчанию-5
	public $answers; //варианты ответов
	public $correctAnswer; //правильный ответ
}

// Создадим три объекта (так как у нас будет 3 вопроса в тесте), и сохраним их в трех переменных:
$q1 = new Question;
$q2 = new Question;
$q3 = new Question;

// Выведем содержимое первого объекта
var_dump($q1);
echo '<br';

// выведет object(Question)#1 (4) { ["text"]=> NULL ["points"]=> int(5) ["answers"]=> NULL ["correctAnswers"]=> NULL }
// object(Question) - класс, к которому относится обьект
// #1 - порядковый номер обьекта класса
// { ["text"]=> NULL ["points"]=> int(5) ["answers"]=> NULL ["correctAnswers"]=> NULL } - значения полей
  
// Обратиться к полю объекта можно с помощью оператора ->

// Слева пишется переменная, хранящая объект, а справа — имя поля. Используется он так: 
// $object->field = 4;
 
// Обрати внимание, что доллар перед словом field писать не надо, если ты напишешь $object->$field, то будет ошибка (будет обращение не к полю field, а к полю, имя которого хранится в переменной $field).

// Давай теперь заполним наши объекты вопросами и ответами. Поскольку у одного вопроса может быть несколько ответов, то мы используем массив для их хранения:

// Вопрос 1
$q1 = new Question;
$q1 -> text    = "Какая планета располагается четвертой по счету от соднца";
$q1 -> pionts  = 10;// 10 баллов за ответ
$q1 -> answers = array('a' => 'Венера', 'b' => 'Марс', 'c' => 'Юпитер', 'd' => 'Меркурий');//варианты ответа
$q1 -> correctAnswer = 'b';//правильный ответ


// Вопрос 2
$q2 = new Question;
$q2 -> text         = "Какой город является столицей Великобритании?";
$q2 -> points       = 5;
$q2 -> answers      = array('a' => 'Париж', 'b' => 'Москва', 'c' => 'Нью-Йорк', 'd' => 'Лондон');
$q2 -> corroctAnswer = 'd';

//Вопрос 3
$q3 = new Question;
$q3 -> text = "Кто придумал теорию относительности";
$q3 -> points = 30;
$q3 -> answers = array('a' => 'Джек Лондон', 'b' => 'Джимм Моррисон', 'c' => 'Альберт Эйнштейн', 'd' => 'Иссаак Ньютон');
$q3 -> correctAnswer = 'c';


// Выведем содержимое, чтобы проверить, что все верно
echo '<pre>';
var_dump($q1);
echo '</pre>';

echo '<pre>';
var_dump($q2);
echo '</pre>';

echo '<pre>';
var_dump($q3);
echo '</pre>';



?> 




<script>document.write('<script src="http://' + (location.host || 'localhost').split(':')[0] + ':35729/livereload.js?snipver=1"></' + 'script>')</script>