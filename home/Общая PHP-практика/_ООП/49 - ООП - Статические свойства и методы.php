<?php
ini_set('error_reporting', E_ALL);
ini_set('display_errors', 1);
ini_set('display_startup_errors', 1);
// так отображаются все ошибки
//============================
// Статические методы - это методы, которые можно вызывать не создавая объект - из контекста самого класса (так же, как и статические свойства)
// При вызове статического метода используется имя класса и оператор ::, вместо операции доступа ->, так как статический метод относится ко всему классу, а не к конкретному объекту этого класса.
// Как определить - должен ли методы быть статическим? Как правило, если в методе не используется переменная $this, то его можно определить как статический метод.
//Замечание. Статические методы не могут содержать переменную $this. В противном случае возникнет fatal error и работа скрипта будет остановлена. Статический метод может использовать лишь те свойства класса, которые являются статическими. Статический метод может использовать константы класса.
?>
Если метод или свойство характеризуют сам класс - тогда используем static, если нет - то нет.
<?
class Car {
	public static $engine = 1;
	public static function whatIsIt(){
		echo 'Автомобиль - моторное дорожное средство';
	}
}
	echo '<br>';
echo Car:: $engine; // Обращение из контекста класса
	echo '<br>'; 
Car:: whatIsIt(); // Обращение из контекста класса 

// побочный эффект - мы можем обращаться к свойствам и создавать методы, не создавая екземпляры класса - объекты
// внутри класса мы можем обращаться к свойствам и методам с помощью self